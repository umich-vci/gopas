/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gopas

import (
	"encoding/json"
)

// AccountModelv1Accounts struct for AccountModelv1Accounts
type AccountModelv1Accounts struct {
	// The account ID of the account
	AccountID          *string         `json:"AccountID,omitempty"`
	InternalProperties *[]KeyValuePair `json:"InternalProperties,omitempty"`
	Properties         *[]KeyValuePair `json:"Properties,omitempty"`
}

// NewAccountModelv1Accounts instantiates a new AccountModelv1Accounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountModelv1Accounts() *AccountModelv1Accounts {
	this := AccountModelv1Accounts{}
	return &this
}

// NewAccountModelv1AccountsWithDefaults instantiates a new AccountModelv1Accounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountModelv1AccountsWithDefaults() *AccountModelv1Accounts {
	this := AccountModelv1Accounts{}
	return &this
}

// GetAccountID returns the AccountID field value if set, zero value otherwise.
func (o *AccountModelv1Accounts) GetAccountID() string {
	if o == nil || o.AccountID == nil {
		var ret string
		return ret
	}
	return *o.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModelv1Accounts) GetAccountIDOk() (*string, bool) {
	if o == nil || o.AccountID == nil {
		return nil, false
	}
	return o.AccountID, true
}

// HasAccountID returns a boolean if a field has been set.
func (o *AccountModelv1Accounts) HasAccountID() bool {
	if o != nil && o.AccountID != nil {
		return true
	}

	return false
}

// SetAccountID gets a reference to the given string and assigns it to the AccountID field.
func (o *AccountModelv1Accounts) SetAccountID(v string) {
	o.AccountID = &v
}

// GetInternalProperties returns the InternalProperties field value if set, zero value otherwise.
func (o *AccountModelv1Accounts) GetInternalProperties() []KeyValuePair {
	if o == nil || o.InternalProperties == nil {
		var ret []KeyValuePair
		return ret
	}
	return *o.InternalProperties
}

// GetInternalPropertiesOk returns a tuple with the InternalProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModelv1Accounts) GetInternalPropertiesOk() (*[]KeyValuePair, bool) {
	if o == nil || o.InternalProperties == nil {
		return nil, false
	}
	return o.InternalProperties, true
}

// HasInternalProperties returns a boolean if a field has been set.
func (o *AccountModelv1Accounts) HasInternalProperties() bool {
	if o != nil && o.InternalProperties != nil {
		return true
	}

	return false
}

// SetInternalProperties gets a reference to the given []KeyValuePair and assigns it to the InternalProperties field.
func (o *AccountModelv1Accounts) SetInternalProperties(v []KeyValuePair) {
	o.InternalProperties = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *AccountModelv1Accounts) GetProperties() []KeyValuePair {
	if o == nil || o.Properties == nil {
		var ret []KeyValuePair
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModelv1Accounts) GetPropertiesOk() (*[]KeyValuePair, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *AccountModelv1Accounts) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []KeyValuePair and assigns it to the Properties field.
func (o *AccountModelv1Accounts) SetProperties(v []KeyValuePair) {
	o.Properties = &v
}

func (o AccountModelv1Accounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountID != nil {
		toSerialize["AccountID"] = o.AccountID
	}
	if o.InternalProperties != nil {
		toSerialize["InternalProperties"] = o.InternalProperties
	}
	if o.Properties != nil {
		toSerialize["Properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableAccountModelv1Accounts struct {
	value *AccountModelv1Accounts
	isSet bool
}

func (v NullableAccountModelv1Accounts) Get() *AccountModelv1Accounts {
	return v.value
}

func (v *NullableAccountModelv1Accounts) Set(val *AccountModelv1Accounts) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountModelv1Accounts) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountModelv1Accounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountModelv1Accounts(val *AccountModelv1Accounts) *NullableAccountModelv1Accounts {
	return &NullableAccountModelv1Accounts{value: val, isSet: true}
}

func (v NullableAccountModelv1Accounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountModelv1Accounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
