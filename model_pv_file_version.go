/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gopas

import (
	"encoding/json"
	"time"
)

// PVFileVersion struct for PVFileVersion
type PVFileVersion struct {
	InputStream                             *VaultFileStream `json:"InputStream,omitempty"`
	OutputStream                            *VaultFileStream `json:"OutputStream,omitempty"`
	Name                                    *string          `json:"Name,omitempty"`
	Folder                                  *string          `json:"Folder,omitempty"`
	Safe                                    *string          `json:"Safe,omitempty"`
	InternalName                            *string          `json:"InternalName,omitempty"`
	CreationDate                            *time.Time       `json:"CreationDate,omitempty"`
	CreatedBy                               *string          `json:"CreatedBy,omitempty"`
	Deletiondate                            *time.Time       `json:"Deletiondate,omitempty"`
	DeletedBy                               *string          `json:"DeletedBy,omitempty"`
	LastUsedDate                            *time.Time       `json:"LastUsedDate,omitempty"`
	LastUsedBy                              *string          `json:"LastUsedBy,omitempty"`
	Size                                    *float64         `json:"Size,omitempty"`
	History                                 *int64           `json:"History,omitempty"`
	Expdt                                   *time.Time       `json:"Expdt,omitempty"`
	FileAccessMarkFlags                     *int32           `json:"FileAccessMarkFlags,omitempty"`
	OwnerFlags                              *int32           `json:"OwnerFlags,omitempty"`
	LockDate                                *time.Time       `json:"LockDate,omitempty"`
	LockedBy                                *string          `json:"LockedBy,omitempty"`
	ObjectType                              *int32           `json:"ObjectType,omitempty"`
	FileNumber                              *int32           `json:"FileNumber,omitempty"`
	IsDraft                                 *bool            `json:"IsDraft,omitempty"`
	IsRetrieveLock                          *bool            `json:"IsRetrieveLock,omitempty"`
	FileCreationDate                        *time.Time       `json:"FileCreationDate,omitempty"`
	FileCreatedBy                           *string          `json:"FileCreatedBy,omitempty"`
	AgentLockedBy                           *string          `json:"AgentLockedBy,omitempty"`
	Options                                 *int64           `json:"Options,omitempty"`
	ModificationDate                        *time.Time       `json:"ModificationDate,omitempty"`
	RealModificationDate                    *time.Time       `json:"RealModificationDate,omitempty"`
	RealModifiedBy                          *string          `json:"RealModifiedBy,omitempty"`
	LastSuccessfulBiosScan                  *time.Time       `json:"LastSuccessfulBiosScan,omitempty"`
	LastFailureBiosScan                     *time.Time       `json:"LastFailureBiosScan,omitempty"`
	LastFailureBiosScanReason               *string          `json:"LastFailureBiosScanReason,omitempty"`
	ModifiedBy                              *string          `json:"ModifiedBy,omitempty"`
	LastHumanUsedBy                         *string          `json:"LastHumanUsedBy,omitempty"`
	LastHumanUsedDate                       *time.Time       `json:"LastHumanUsedDate,omitempty"`
	LastHumanRetrievedBy                    *string          `json:"LastHumanRetrievedBy,omitempty"`
	LastHumanRetrievedDate                  *time.Time       `json:"LastHumanRetrievedDate,omitempty"`
	SafeID                                  *int64           `json:"SafeID,omitempty"`
	AccessLevel                             *int64           `json:"AccessLevel,omitempty"`
	MonitorAuth                             *bool            `json:"MonitorAuth,omitempty"`
	ManagerAuth                             *bool            `json:"ManagerAuth,omitempty"`
	GetAuth                                 *bool            `json:"GetAuth,omitempty"`
	PutAuth                                 *bool            `json:"PutAuth,omitempty"`
	DeleteAuth                              *bool            `json:"DeleteAuth,omitempty"`
	SupervisorAuth                          *bool            `json:"SupervisorAuth,omitempty"`
	BackupAuth                              *bool            `json:"BackupAuth,omitempty"`
	OwnersManagerAuth                       *bool            `json:"OwnersManagerAuth,omitempty"`
	NoConfirmRequiredAuth                   *bool            `json:"NoConfirmRequiredAuth,omitempty"`
	ValidateSafeContentAuth                 *bool            `json:"ValidateSafeContentAuth,omitempty"`
	ListAuth                                *bool            `json:"ListAuth,omitempty"`
	UsePasswordAuth                         *bool            `json:"UsePasswordAuth,omitempty"`
	UpdateObjectPropertiesAuth              *bool            `json:"UpdateObjectPropertiesAuth,omitempty"`
	InitiateCPMChangeAuth                   *bool            `json:"InitiateCPMChangeAuth,omitempty"`
	InitiateCPMChangeWithManualPasswordAuth *bool            `json:"InitiateCPMChangeWithManualPasswordAuth,omitempty"`
	CreateFolderAuth                        *bool            `json:"CreateFolderAuth,omitempty"`
	DeleteFolderAuth                        *bool            `json:"DeleteFolderAuth,omitempty"`
	MoveFromAuth                            *bool            `json:"MoveFromAuth,omitempty"`
	MoveIntoAuth                            *bool            `json:"MoveIntoAuth,omitempty"`
	ViewAuditAuth                           *bool            `json:"ViewAuditAuth,omitempty"`
	ViewPermissionsAuth                     *bool            `json:"ViewPermissionsAuth,omitempty"`
	EventsListAuth                          *bool            `json:"EventsListAuth,omitempty"`
	EventsAddAuth                           *bool            `json:"EventsAddAuth,omitempty"`
	CreateObjectAuth                        *bool            `json:"CreateObjectAuth,omitempty"`
	UnlockObjectAuth                        *bool            `json:"UnlockObjectAuth,omitempty"`
	RenameObjectAuth                        *bool            `json:"RenameObjectAuth,omitempty"`
	AllAuth                                 *bool            `json:"AllAuth,omitempty"`
	NeedConfirmStatus                       *int64           `json:"NeedConfirmStatus,omitempty"`
	IsTempVersion                           *bool            `json:"IsTempVersion,omitempty"`
	CategoryModificationDate                *time.Time       `json:"CategoryModificationDate,omitempty"`
}

// NewPVFileVersion instantiates a new PVFileVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPVFileVersion() *PVFileVersion {
	this := PVFileVersion{}
	return &this
}

// NewPVFileVersionWithDefaults instantiates a new PVFileVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPVFileVersionWithDefaults() *PVFileVersion {
	this := PVFileVersion{}
	return &this
}

// GetInputStream returns the InputStream field value if set, zero value otherwise.
func (o *PVFileVersion) GetInputStream() VaultFileStream {
	if o == nil || o.InputStream == nil {
		var ret VaultFileStream
		return ret
	}
	return *o.InputStream
}

// GetInputStreamOk returns a tuple with the InputStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetInputStreamOk() (*VaultFileStream, bool) {
	if o == nil || o.InputStream == nil {
		return nil, false
	}
	return o.InputStream, true
}

// HasInputStream returns a boolean if a field has been set.
func (o *PVFileVersion) HasInputStream() bool {
	if o != nil && o.InputStream != nil {
		return true
	}

	return false
}

// SetInputStream gets a reference to the given VaultFileStream and assigns it to the InputStream field.
func (o *PVFileVersion) SetInputStream(v VaultFileStream) {
	o.InputStream = &v
}

// GetOutputStream returns the OutputStream field value if set, zero value otherwise.
func (o *PVFileVersion) GetOutputStream() VaultFileStream {
	if o == nil || o.OutputStream == nil {
		var ret VaultFileStream
		return ret
	}
	return *o.OutputStream
}

// GetOutputStreamOk returns a tuple with the OutputStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetOutputStreamOk() (*VaultFileStream, bool) {
	if o == nil || o.OutputStream == nil {
		return nil, false
	}
	return o.OutputStream, true
}

// HasOutputStream returns a boolean if a field has been set.
func (o *PVFileVersion) HasOutputStream() bool {
	if o != nil && o.OutputStream != nil {
		return true
	}

	return false
}

// SetOutputStream gets a reference to the given VaultFileStream and assigns it to the OutputStream field.
func (o *PVFileVersion) SetOutputStream(v VaultFileStream) {
	o.OutputStream = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PVFileVersion) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PVFileVersion) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PVFileVersion) SetName(v string) {
	o.Name = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *PVFileVersion) GetFolder() string {
	if o == nil || o.Folder == nil {
		var ret string
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetFolderOk() (*string, bool) {
	if o == nil || o.Folder == nil {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *PVFileVersion) HasFolder() bool {
	if o != nil && o.Folder != nil {
		return true
	}

	return false
}

// SetFolder gets a reference to the given string and assigns it to the Folder field.
func (o *PVFileVersion) SetFolder(v string) {
	o.Folder = &v
}

// GetSafe returns the Safe field value if set, zero value otherwise.
func (o *PVFileVersion) GetSafe() string {
	if o == nil || o.Safe == nil {
		var ret string
		return ret
	}
	return *o.Safe
}

// GetSafeOk returns a tuple with the Safe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetSafeOk() (*string, bool) {
	if o == nil || o.Safe == nil {
		return nil, false
	}
	return o.Safe, true
}

// HasSafe returns a boolean if a field has been set.
func (o *PVFileVersion) HasSafe() bool {
	if o != nil && o.Safe != nil {
		return true
	}

	return false
}

// SetSafe gets a reference to the given string and assigns it to the Safe field.
func (o *PVFileVersion) SetSafe(v string) {
	o.Safe = &v
}

// GetInternalName returns the InternalName field value if set, zero value otherwise.
func (o *PVFileVersion) GetInternalName() string {
	if o == nil || o.InternalName == nil {
		var ret string
		return ret
	}
	return *o.InternalName
}

// GetInternalNameOk returns a tuple with the InternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetInternalNameOk() (*string, bool) {
	if o == nil || o.InternalName == nil {
		return nil, false
	}
	return o.InternalName, true
}

// HasInternalName returns a boolean if a field has been set.
func (o *PVFileVersion) HasInternalName() bool {
	if o != nil && o.InternalName != nil {
		return true
	}

	return false
}

// SetInternalName gets a reference to the given string and assigns it to the InternalName field.
func (o *PVFileVersion) SetInternalName(v string) {
	o.InternalName = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetCreationDate() time.Time {
	if o == nil || o.CreationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *PVFileVersion) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *PVFileVersion) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetDeletiondate returns the Deletiondate field value if set, zero value otherwise.
func (o *PVFileVersion) GetDeletiondate() time.Time {
	if o == nil || o.Deletiondate == nil {
		var ret time.Time
		return ret
	}
	return *o.Deletiondate
}

// GetDeletiondateOk returns a tuple with the Deletiondate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetDeletiondateOk() (*time.Time, bool) {
	if o == nil || o.Deletiondate == nil {
		return nil, false
	}
	return o.Deletiondate, true
}

// HasDeletiondate returns a boolean if a field has been set.
func (o *PVFileVersion) HasDeletiondate() bool {
	if o != nil && o.Deletiondate != nil {
		return true
	}

	return false
}

// SetDeletiondate gets a reference to the given time.Time and assigns it to the Deletiondate field.
func (o *PVFileVersion) SetDeletiondate(v time.Time) {
	o.Deletiondate = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetDeletedBy() string {
	if o == nil || o.DeletedBy == nil {
		var ret string
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetDeletedByOk() (*string, bool) {
	if o == nil || o.DeletedBy == nil {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasDeletedBy() bool {
	if o != nil && o.DeletedBy != nil {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given string and assigns it to the DeletedBy field.
func (o *PVFileVersion) SetDeletedBy(v string) {
	o.DeletedBy = &v
}

// GetLastUsedDate returns the LastUsedDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastUsedDate() time.Time {
	if o == nil || o.LastUsedDate == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUsedDate
}

// GetLastUsedDateOk returns a tuple with the LastUsedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastUsedDateOk() (*time.Time, bool) {
	if o == nil || o.LastUsedDate == nil {
		return nil, false
	}
	return o.LastUsedDate, true
}

// HasLastUsedDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastUsedDate() bool {
	if o != nil && o.LastUsedDate != nil {
		return true
	}

	return false
}

// SetLastUsedDate gets a reference to the given time.Time and assigns it to the LastUsedDate field.
func (o *PVFileVersion) SetLastUsedDate(v time.Time) {
	o.LastUsedDate = &v
}

// GetLastUsedBy returns the LastUsedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastUsedBy() string {
	if o == nil || o.LastUsedBy == nil {
		var ret string
		return ret
	}
	return *o.LastUsedBy
}

// GetLastUsedByOk returns a tuple with the LastUsedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastUsedByOk() (*string, bool) {
	if o == nil || o.LastUsedBy == nil {
		return nil, false
	}
	return o.LastUsedBy, true
}

// HasLastUsedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastUsedBy() bool {
	if o != nil && o.LastUsedBy != nil {
		return true
	}

	return false
}

// SetLastUsedBy gets a reference to the given string and assigns it to the LastUsedBy field.
func (o *PVFileVersion) SetLastUsedBy(v string) {
	o.LastUsedBy = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *PVFileVersion) GetSize() float64 {
	if o == nil || o.Size == nil {
		var ret float64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetSizeOk() (*float64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *PVFileVersion) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given float64 and assigns it to the Size field.
func (o *PVFileVersion) SetSize(v float64) {
	o.Size = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *PVFileVersion) GetHistory() int64 {
	if o == nil || o.History == nil {
		var ret int64
		return ret
	}
	return *o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetHistoryOk() (*int64, bool) {
	if o == nil || o.History == nil {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *PVFileVersion) HasHistory() bool {
	if o != nil && o.History != nil {
		return true
	}

	return false
}

// SetHistory gets a reference to the given int64 and assigns it to the History field.
func (o *PVFileVersion) SetHistory(v int64) {
	o.History = &v
}

// GetExpdt returns the Expdt field value if set, zero value otherwise.
func (o *PVFileVersion) GetExpdt() time.Time {
	if o == nil || o.Expdt == nil {
		var ret time.Time
		return ret
	}
	return *o.Expdt
}

// GetExpdtOk returns a tuple with the Expdt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetExpdtOk() (*time.Time, bool) {
	if o == nil || o.Expdt == nil {
		return nil, false
	}
	return o.Expdt, true
}

// HasExpdt returns a boolean if a field has been set.
func (o *PVFileVersion) HasExpdt() bool {
	if o != nil && o.Expdt != nil {
		return true
	}

	return false
}

// SetExpdt gets a reference to the given time.Time and assigns it to the Expdt field.
func (o *PVFileVersion) SetExpdt(v time.Time) {
	o.Expdt = &v
}

// GetFileAccessMarkFlags returns the FileAccessMarkFlags field value if set, zero value otherwise.
func (o *PVFileVersion) GetFileAccessMarkFlags() int32 {
	if o == nil || o.FileAccessMarkFlags == nil {
		var ret int32
		return ret
	}
	return *o.FileAccessMarkFlags
}

// GetFileAccessMarkFlagsOk returns a tuple with the FileAccessMarkFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetFileAccessMarkFlagsOk() (*int32, bool) {
	if o == nil || o.FileAccessMarkFlags == nil {
		return nil, false
	}
	return o.FileAccessMarkFlags, true
}

// HasFileAccessMarkFlags returns a boolean if a field has been set.
func (o *PVFileVersion) HasFileAccessMarkFlags() bool {
	if o != nil && o.FileAccessMarkFlags != nil {
		return true
	}

	return false
}

// SetFileAccessMarkFlags gets a reference to the given int32 and assigns it to the FileAccessMarkFlags field.
func (o *PVFileVersion) SetFileAccessMarkFlags(v int32) {
	o.FileAccessMarkFlags = &v
}

// GetOwnerFlags returns the OwnerFlags field value if set, zero value otherwise.
func (o *PVFileVersion) GetOwnerFlags() int32 {
	if o == nil || o.OwnerFlags == nil {
		var ret int32
		return ret
	}
	return *o.OwnerFlags
}

// GetOwnerFlagsOk returns a tuple with the OwnerFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetOwnerFlagsOk() (*int32, bool) {
	if o == nil || o.OwnerFlags == nil {
		return nil, false
	}
	return o.OwnerFlags, true
}

// HasOwnerFlags returns a boolean if a field has been set.
func (o *PVFileVersion) HasOwnerFlags() bool {
	if o != nil && o.OwnerFlags != nil {
		return true
	}

	return false
}

// SetOwnerFlags gets a reference to the given int32 and assigns it to the OwnerFlags field.
func (o *PVFileVersion) SetOwnerFlags(v int32) {
	o.OwnerFlags = &v
}

// GetLockDate returns the LockDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetLockDate() time.Time {
	if o == nil || o.LockDate == nil {
		var ret time.Time
		return ret
	}
	return *o.LockDate
}

// GetLockDateOk returns a tuple with the LockDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLockDateOk() (*time.Time, bool) {
	if o == nil || o.LockDate == nil {
		return nil, false
	}
	return o.LockDate, true
}

// HasLockDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasLockDate() bool {
	if o != nil && o.LockDate != nil {
		return true
	}

	return false
}

// SetLockDate gets a reference to the given time.Time and assigns it to the LockDate field.
func (o *PVFileVersion) SetLockDate(v time.Time) {
	o.LockDate = &v
}

// GetLockedBy returns the LockedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetLockedBy() string {
	if o == nil || o.LockedBy == nil {
		var ret string
		return ret
	}
	return *o.LockedBy
}

// GetLockedByOk returns a tuple with the LockedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLockedByOk() (*string, bool) {
	if o == nil || o.LockedBy == nil {
		return nil, false
	}
	return o.LockedBy, true
}

// HasLockedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasLockedBy() bool {
	if o != nil && o.LockedBy != nil {
		return true
	}

	return false
}

// SetLockedBy gets a reference to the given string and assigns it to the LockedBy field.
func (o *PVFileVersion) SetLockedBy(v string) {
	o.LockedBy = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *PVFileVersion) GetObjectType() int32 {
	if o == nil || o.ObjectType == nil {
		var ret int32
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetObjectTypeOk() (*int32, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *PVFileVersion) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given int32 and assigns it to the ObjectType field.
func (o *PVFileVersion) SetObjectType(v int32) {
	o.ObjectType = &v
}

// GetFileNumber returns the FileNumber field value if set, zero value otherwise.
func (o *PVFileVersion) GetFileNumber() int32 {
	if o == nil || o.FileNumber == nil {
		var ret int32
		return ret
	}
	return *o.FileNumber
}

// GetFileNumberOk returns a tuple with the FileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetFileNumberOk() (*int32, bool) {
	if o == nil || o.FileNumber == nil {
		return nil, false
	}
	return o.FileNumber, true
}

// HasFileNumber returns a boolean if a field has been set.
func (o *PVFileVersion) HasFileNumber() bool {
	if o != nil && o.FileNumber != nil {
		return true
	}

	return false
}

// SetFileNumber gets a reference to the given int32 and assigns it to the FileNumber field.
func (o *PVFileVersion) SetFileNumber(v int32) {
	o.FileNumber = &v
}

// GetIsDraft returns the IsDraft field value if set, zero value otherwise.
func (o *PVFileVersion) GetIsDraft() bool {
	if o == nil || o.IsDraft == nil {
		var ret bool
		return ret
	}
	return *o.IsDraft
}

// GetIsDraftOk returns a tuple with the IsDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetIsDraftOk() (*bool, bool) {
	if o == nil || o.IsDraft == nil {
		return nil, false
	}
	return o.IsDraft, true
}

// HasIsDraft returns a boolean if a field has been set.
func (o *PVFileVersion) HasIsDraft() bool {
	if o != nil && o.IsDraft != nil {
		return true
	}

	return false
}

// SetIsDraft gets a reference to the given bool and assigns it to the IsDraft field.
func (o *PVFileVersion) SetIsDraft(v bool) {
	o.IsDraft = &v
}

// GetIsRetrieveLock returns the IsRetrieveLock field value if set, zero value otherwise.
func (o *PVFileVersion) GetIsRetrieveLock() bool {
	if o == nil || o.IsRetrieveLock == nil {
		var ret bool
		return ret
	}
	return *o.IsRetrieveLock
}

// GetIsRetrieveLockOk returns a tuple with the IsRetrieveLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetIsRetrieveLockOk() (*bool, bool) {
	if o == nil || o.IsRetrieveLock == nil {
		return nil, false
	}
	return o.IsRetrieveLock, true
}

// HasIsRetrieveLock returns a boolean if a field has been set.
func (o *PVFileVersion) HasIsRetrieveLock() bool {
	if o != nil && o.IsRetrieveLock != nil {
		return true
	}

	return false
}

// SetIsRetrieveLock gets a reference to the given bool and assigns it to the IsRetrieveLock field.
func (o *PVFileVersion) SetIsRetrieveLock(v bool) {
	o.IsRetrieveLock = &v
}

// GetFileCreationDate returns the FileCreationDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetFileCreationDate() time.Time {
	if o == nil || o.FileCreationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.FileCreationDate
}

// GetFileCreationDateOk returns a tuple with the FileCreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetFileCreationDateOk() (*time.Time, bool) {
	if o == nil || o.FileCreationDate == nil {
		return nil, false
	}
	return o.FileCreationDate, true
}

// HasFileCreationDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasFileCreationDate() bool {
	if o != nil && o.FileCreationDate != nil {
		return true
	}

	return false
}

// SetFileCreationDate gets a reference to the given time.Time and assigns it to the FileCreationDate field.
func (o *PVFileVersion) SetFileCreationDate(v time.Time) {
	o.FileCreationDate = &v
}

// GetFileCreatedBy returns the FileCreatedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetFileCreatedBy() string {
	if o == nil || o.FileCreatedBy == nil {
		var ret string
		return ret
	}
	return *o.FileCreatedBy
}

// GetFileCreatedByOk returns a tuple with the FileCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetFileCreatedByOk() (*string, bool) {
	if o == nil || o.FileCreatedBy == nil {
		return nil, false
	}
	return o.FileCreatedBy, true
}

// HasFileCreatedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasFileCreatedBy() bool {
	if o != nil && o.FileCreatedBy != nil {
		return true
	}

	return false
}

// SetFileCreatedBy gets a reference to the given string and assigns it to the FileCreatedBy field.
func (o *PVFileVersion) SetFileCreatedBy(v string) {
	o.FileCreatedBy = &v
}

// GetAgentLockedBy returns the AgentLockedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetAgentLockedBy() string {
	if o == nil || o.AgentLockedBy == nil {
		var ret string
		return ret
	}
	return *o.AgentLockedBy
}

// GetAgentLockedByOk returns a tuple with the AgentLockedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetAgentLockedByOk() (*string, bool) {
	if o == nil || o.AgentLockedBy == nil {
		return nil, false
	}
	return o.AgentLockedBy, true
}

// HasAgentLockedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasAgentLockedBy() bool {
	if o != nil && o.AgentLockedBy != nil {
		return true
	}

	return false
}

// SetAgentLockedBy gets a reference to the given string and assigns it to the AgentLockedBy field.
func (o *PVFileVersion) SetAgentLockedBy(v string) {
	o.AgentLockedBy = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *PVFileVersion) GetOptions() int64 {
	if o == nil || o.Options == nil {
		var ret int64
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetOptionsOk() (*int64, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *PVFileVersion) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given int64 and assigns it to the Options field.
func (o *PVFileVersion) SetOptions(v int64) {
	o.Options = &v
}

// GetModificationDate returns the ModificationDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetModificationDate() time.Time {
	if o == nil || o.ModificationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ModificationDate
}

// GetModificationDateOk returns a tuple with the ModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetModificationDateOk() (*time.Time, bool) {
	if o == nil || o.ModificationDate == nil {
		return nil, false
	}
	return o.ModificationDate, true
}

// HasModificationDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasModificationDate() bool {
	if o != nil && o.ModificationDate != nil {
		return true
	}

	return false
}

// SetModificationDate gets a reference to the given time.Time and assigns it to the ModificationDate field.
func (o *PVFileVersion) SetModificationDate(v time.Time) {
	o.ModificationDate = &v
}

// GetRealModificationDate returns the RealModificationDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetRealModificationDate() time.Time {
	if o == nil || o.RealModificationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.RealModificationDate
}

// GetRealModificationDateOk returns a tuple with the RealModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetRealModificationDateOk() (*time.Time, bool) {
	if o == nil || o.RealModificationDate == nil {
		return nil, false
	}
	return o.RealModificationDate, true
}

// HasRealModificationDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasRealModificationDate() bool {
	if o != nil && o.RealModificationDate != nil {
		return true
	}

	return false
}

// SetRealModificationDate gets a reference to the given time.Time and assigns it to the RealModificationDate field.
func (o *PVFileVersion) SetRealModificationDate(v time.Time) {
	o.RealModificationDate = &v
}

// GetRealModifiedBy returns the RealModifiedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetRealModifiedBy() string {
	if o == nil || o.RealModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.RealModifiedBy
}

// GetRealModifiedByOk returns a tuple with the RealModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetRealModifiedByOk() (*string, bool) {
	if o == nil || o.RealModifiedBy == nil {
		return nil, false
	}
	return o.RealModifiedBy, true
}

// HasRealModifiedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasRealModifiedBy() bool {
	if o != nil && o.RealModifiedBy != nil {
		return true
	}

	return false
}

// SetRealModifiedBy gets a reference to the given string and assigns it to the RealModifiedBy field.
func (o *PVFileVersion) SetRealModifiedBy(v string) {
	o.RealModifiedBy = &v
}

// GetLastSuccessfulBiosScan returns the LastSuccessfulBiosScan field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastSuccessfulBiosScan() time.Time {
	if o == nil || o.LastSuccessfulBiosScan == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulBiosScan
}

// GetLastSuccessfulBiosScanOk returns a tuple with the LastSuccessfulBiosScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastSuccessfulBiosScanOk() (*time.Time, bool) {
	if o == nil || o.LastSuccessfulBiosScan == nil {
		return nil, false
	}
	return o.LastSuccessfulBiosScan, true
}

// HasLastSuccessfulBiosScan returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastSuccessfulBiosScan() bool {
	if o != nil && o.LastSuccessfulBiosScan != nil {
		return true
	}

	return false
}

// SetLastSuccessfulBiosScan gets a reference to the given time.Time and assigns it to the LastSuccessfulBiosScan field.
func (o *PVFileVersion) SetLastSuccessfulBiosScan(v time.Time) {
	o.LastSuccessfulBiosScan = &v
}

// GetLastFailureBiosScan returns the LastFailureBiosScan field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastFailureBiosScan() time.Time {
	if o == nil || o.LastFailureBiosScan == nil {
		var ret time.Time
		return ret
	}
	return *o.LastFailureBiosScan
}

// GetLastFailureBiosScanOk returns a tuple with the LastFailureBiosScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastFailureBiosScanOk() (*time.Time, bool) {
	if o == nil || o.LastFailureBiosScan == nil {
		return nil, false
	}
	return o.LastFailureBiosScan, true
}

// HasLastFailureBiosScan returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastFailureBiosScan() bool {
	if o != nil && o.LastFailureBiosScan != nil {
		return true
	}

	return false
}

// SetLastFailureBiosScan gets a reference to the given time.Time and assigns it to the LastFailureBiosScan field.
func (o *PVFileVersion) SetLastFailureBiosScan(v time.Time) {
	o.LastFailureBiosScan = &v
}

// GetLastFailureBiosScanReason returns the LastFailureBiosScanReason field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastFailureBiosScanReason() string {
	if o == nil || o.LastFailureBiosScanReason == nil {
		var ret string
		return ret
	}
	return *o.LastFailureBiosScanReason
}

// GetLastFailureBiosScanReasonOk returns a tuple with the LastFailureBiosScanReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastFailureBiosScanReasonOk() (*string, bool) {
	if o == nil || o.LastFailureBiosScanReason == nil {
		return nil, false
	}
	return o.LastFailureBiosScanReason, true
}

// HasLastFailureBiosScanReason returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastFailureBiosScanReason() bool {
	if o != nil && o.LastFailureBiosScanReason != nil {
		return true
	}

	return false
}

// SetLastFailureBiosScanReason gets a reference to the given string and assigns it to the LastFailureBiosScanReason field.
func (o *PVFileVersion) SetLastFailureBiosScanReason(v string) {
	o.LastFailureBiosScanReason = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetModifiedBy() string {
	if o == nil || o.ModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetModifiedByOk() (*string, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *PVFileVersion) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetLastHumanUsedBy returns the LastHumanUsedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastHumanUsedBy() string {
	if o == nil || o.LastHumanUsedBy == nil {
		var ret string
		return ret
	}
	return *o.LastHumanUsedBy
}

// GetLastHumanUsedByOk returns a tuple with the LastHumanUsedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastHumanUsedByOk() (*string, bool) {
	if o == nil || o.LastHumanUsedBy == nil {
		return nil, false
	}
	return o.LastHumanUsedBy, true
}

// HasLastHumanUsedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastHumanUsedBy() bool {
	if o != nil && o.LastHumanUsedBy != nil {
		return true
	}

	return false
}

// SetLastHumanUsedBy gets a reference to the given string and assigns it to the LastHumanUsedBy field.
func (o *PVFileVersion) SetLastHumanUsedBy(v string) {
	o.LastHumanUsedBy = &v
}

// GetLastHumanUsedDate returns the LastHumanUsedDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastHumanUsedDate() time.Time {
	if o == nil || o.LastHumanUsedDate == nil {
		var ret time.Time
		return ret
	}
	return *o.LastHumanUsedDate
}

// GetLastHumanUsedDateOk returns a tuple with the LastHumanUsedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastHumanUsedDateOk() (*time.Time, bool) {
	if o == nil || o.LastHumanUsedDate == nil {
		return nil, false
	}
	return o.LastHumanUsedDate, true
}

// HasLastHumanUsedDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastHumanUsedDate() bool {
	if o != nil && o.LastHumanUsedDate != nil {
		return true
	}

	return false
}

// SetLastHumanUsedDate gets a reference to the given time.Time and assigns it to the LastHumanUsedDate field.
func (o *PVFileVersion) SetLastHumanUsedDate(v time.Time) {
	o.LastHumanUsedDate = &v
}

// GetLastHumanRetrievedBy returns the LastHumanRetrievedBy field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastHumanRetrievedBy() string {
	if o == nil || o.LastHumanRetrievedBy == nil {
		var ret string
		return ret
	}
	return *o.LastHumanRetrievedBy
}

// GetLastHumanRetrievedByOk returns a tuple with the LastHumanRetrievedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastHumanRetrievedByOk() (*string, bool) {
	if o == nil || o.LastHumanRetrievedBy == nil {
		return nil, false
	}
	return o.LastHumanRetrievedBy, true
}

// HasLastHumanRetrievedBy returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastHumanRetrievedBy() bool {
	if o != nil && o.LastHumanRetrievedBy != nil {
		return true
	}

	return false
}

// SetLastHumanRetrievedBy gets a reference to the given string and assigns it to the LastHumanRetrievedBy field.
func (o *PVFileVersion) SetLastHumanRetrievedBy(v string) {
	o.LastHumanRetrievedBy = &v
}

// GetLastHumanRetrievedDate returns the LastHumanRetrievedDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetLastHumanRetrievedDate() time.Time {
	if o == nil || o.LastHumanRetrievedDate == nil {
		var ret time.Time
		return ret
	}
	return *o.LastHumanRetrievedDate
}

// GetLastHumanRetrievedDateOk returns a tuple with the LastHumanRetrievedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetLastHumanRetrievedDateOk() (*time.Time, bool) {
	if o == nil || o.LastHumanRetrievedDate == nil {
		return nil, false
	}
	return o.LastHumanRetrievedDate, true
}

// HasLastHumanRetrievedDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasLastHumanRetrievedDate() bool {
	if o != nil && o.LastHumanRetrievedDate != nil {
		return true
	}

	return false
}

// SetLastHumanRetrievedDate gets a reference to the given time.Time and assigns it to the LastHumanRetrievedDate field.
func (o *PVFileVersion) SetLastHumanRetrievedDate(v time.Time) {
	o.LastHumanRetrievedDate = &v
}

// GetSafeID returns the SafeID field value if set, zero value otherwise.
func (o *PVFileVersion) GetSafeID() int64 {
	if o == nil || o.SafeID == nil {
		var ret int64
		return ret
	}
	return *o.SafeID
}

// GetSafeIDOk returns a tuple with the SafeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetSafeIDOk() (*int64, bool) {
	if o == nil || o.SafeID == nil {
		return nil, false
	}
	return o.SafeID, true
}

// HasSafeID returns a boolean if a field has been set.
func (o *PVFileVersion) HasSafeID() bool {
	if o != nil && o.SafeID != nil {
		return true
	}

	return false
}

// SetSafeID gets a reference to the given int64 and assigns it to the SafeID field.
func (o *PVFileVersion) SetSafeID(v int64) {
	o.SafeID = &v
}

// GetAccessLevel returns the AccessLevel field value if set, zero value otherwise.
func (o *PVFileVersion) GetAccessLevel() int64 {
	if o == nil || o.AccessLevel == nil {
		var ret int64
		return ret
	}
	return *o.AccessLevel
}

// GetAccessLevelOk returns a tuple with the AccessLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetAccessLevelOk() (*int64, bool) {
	if o == nil || o.AccessLevel == nil {
		return nil, false
	}
	return o.AccessLevel, true
}

// HasAccessLevel returns a boolean if a field has been set.
func (o *PVFileVersion) HasAccessLevel() bool {
	if o != nil && o.AccessLevel != nil {
		return true
	}

	return false
}

// SetAccessLevel gets a reference to the given int64 and assigns it to the AccessLevel field.
func (o *PVFileVersion) SetAccessLevel(v int64) {
	o.AccessLevel = &v
}

// GetMonitorAuth returns the MonitorAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetMonitorAuth() bool {
	if o == nil || o.MonitorAuth == nil {
		var ret bool
		return ret
	}
	return *o.MonitorAuth
}

// GetMonitorAuthOk returns a tuple with the MonitorAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetMonitorAuthOk() (*bool, bool) {
	if o == nil || o.MonitorAuth == nil {
		return nil, false
	}
	return o.MonitorAuth, true
}

// HasMonitorAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasMonitorAuth() bool {
	if o != nil && o.MonitorAuth != nil {
		return true
	}

	return false
}

// SetMonitorAuth gets a reference to the given bool and assigns it to the MonitorAuth field.
func (o *PVFileVersion) SetMonitorAuth(v bool) {
	o.MonitorAuth = &v
}

// GetManagerAuth returns the ManagerAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetManagerAuth() bool {
	if o == nil || o.ManagerAuth == nil {
		var ret bool
		return ret
	}
	return *o.ManagerAuth
}

// GetManagerAuthOk returns a tuple with the ManagerAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetManagerAuthOk() (*bool, bool) {
	if o == nil || o.ManagerAuth == nil {
		return nil, false
	}
	return o.ManagerAuth, true
}

// HasManagerAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasManagerAuth() bool {
	if o != nil && o.ManagerAuth != nil {
		return true
	}

	return false
}

// SetManagerAuth gets a reference to the given bool and assigns it to the ManagerAuth field.
func (o *PVFileVersion) SetManagerAuth(v bool) {
	o.ManagerAuth = &v
}

// GetGetAuth returns the GetAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetGetAuth() bool {
	if o == nil || o.GetAuth == nil {
		var ret bool
		return ret
	}
	return *o.GetAuth
}

// GetGetAuthOk returns a tuple with the GetAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetGetAuthOk() (*bool, bool) {
	if o == nil || o.GetAuth == nil {
		return nil, false
	}
	return o.GetAuth, true
}

// HasGetAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasGetAuth() bool {
	if o != nil && o.GetAuth != nil {
		return true
	}

	return false
}

// SetGetAuth gets a reference to the given bool and assigns it to the GetAuth field.
func (o *PVFileVersion) SetGetAuth(v bool) {
	o.GetAuth = &v
}

// GetPutAuth returns the PutAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetPutAuth() bool {
	if o == nil || o.PutAuth == nil {
		var ret bool
		return ret
	}
	return *o.PutAuth
}

// GetPutAuthOk returns a tuple with the PutAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetPutAuthOk() (*bool, bool) {
	if o == nil || o.PutAuth == nil {
		return nil, false
	}
	return o.PutAuth, true
}

// HasPutAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasPutAuth() bool {
	if o != nil && o.PutAuth != nil {
		return true
	}

	return false
}

// SetPutAuth gets a reference to the given bool and assigns it to the PutAuth field.
func (o *PVFileVersion) SetPutAuth(v bool) {
	o.PutAuth = &v
}

// GetDeleteAuth returns the DeleteAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetDeleteAuth() bool {
	if o == nil || o.DeleteAuth == nil {
		var ret bool
		return ret
	}
	return *o.DeleteAuth
}

// GetDeleteAuthOk returns a tuple with the DeleteAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetDeleteAuthOk() (*bool, bool) {
	if o == nil || o.DeleteAuth == nil {
		return nil, false
	}
	return o.DeleteAuth, true
}

// HasDeleteAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasDeleteAuth() bool {
	if o != nil && o.DeleteAuth != nil {
		return true
	}

	return false
}

// SetDeleteAuth gets a reference to the given bool and assigns it to the DeleteAuth field.
func (o *PVFileVersion) SetDeleteAuth(v bool) {
	o.DeleteAuth = &v
}

// GetSupervisorAuth returns the SupervisorAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetSupervisorAuth() bool {
	if o == nil || o.SupervisorAuth == nil {
		var ret bool
		return ret
	}
	return *o.SupervisorAuth
}

// GetSupervisorAuthOk returns a tuple with the SupervisorAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetSupervisorAuthOk() (*bool, bool) {
	if o == nil || o.SupervisorAuth == nil {
		return nil, false
	}
	return o.SupervisorAuth, true
}

// HasSupervisorAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasSupervisorAuth() bool {
	if o != nil && o.SupervisorAuth != nil {
		return true
	}

	return false
}

// SetSupervisorAuth gets a reference to the given bool and assigns it to the SupervisorAuth field.
func (o *PVFileVersion) SetSupervisorAuth(v bool) {
	o.SupervisorAuth = &v
}

// GetBackupAuth returns the BackupAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetBackupAuth() bool {
	if o == nil || o.BackupAuth == nil {
		var ret bool
		return ret
	}
	return *o.BackupAuth
}

// GetBackupAuthOk returns a tuple with the BackupAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetBackupAuthOk() (*bool, bool) {
	if o == nil || o.BackupAuth == nil {
		return nil, false
	}
	return o.BackupAuth, true
}

// HasBackupAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasBackupAuth() bool {
	if o != nil && o.BackupAuth != nil {
		return true
	}

	return false
}

// SetBackupAuth gets a reference to the given bool and assigns it to the BackupAuth field.
func (o *PVFileVersion) SetBackupAuth(v bool) {
	o.BackupAuth = &v
}

// GetOwnersManagerAuth returns the OwnersManagerAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetOwnersManagerAuth() bool {
	if o == nil || o.OwnersManagerAuth == nil {
		var ret bool
		return ret
	}
	return *o.OwnersManagerAuth
}

// GetOwnersManagerAuthOk returns a tuple with the OwnersManagerAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetOwnersManagerAuthOk() (*bool, bool) {
	if o == nil || o.OwnersManagerAuth == nil {
		return nil, false
	}
	return o.OwnersManagerAuth, true
}

// HasOwnersManagerAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasOwnersManagerAuth() bool {
	if o != nil && o.OwnersManagerAuth != nil {
		return true
	}

	return false
}

// SetOwnersManagerAuth gets a reference to the given bool and assigns it to the OwnersManagerAuth field.
func (o *PVFileVersion) SetOwnersManagerAuth(v bool) {
	o.OwnersManagerAuth = &v
}

// GetNoConfirmRequiredAuth returns the NoConfirmRequiredAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetNoConfirmRequiredAuth() bool {
	if o == nil || o.NoConfirmRequiredAuth == nil {
		var ret bool
		return ret
	}
	return *o.NoConfirmRequiredAuth
}

// GetNoConfirmRequiredAuthOk returns a tuple with the NoConfirmRequiredAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetNoConfirmRequiredAuthOk() (*bool, bool) {
	if o == nil || o.NoConfirmRequiredAuth == nil {
		return nil, false
	}
	return o.NoConfirmRequiredAuth, true
}

// HasNoConfirmRequiredAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasNoConfirmRequiredAuth() bool {
	if o != nil && o.NoConfirmRequiredAuth != nil {
		return true
	}

	return false
}

// SetNoConfirmRequiredAuth gets a reference to the given bool and assigns it to the NoConfirmRequiredAuth field.
func (o *PVFileVersion) SetNoConfirmRequiredAuth(v bool) {
	o.NoConfirmRequiredAuth = &v
}

// GetValidateSafeContentAuth returns the ValidateSafeContentAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetValidateSafeContentAuth() bool {
	if o == nil || o.ValidateSafeContentAuth == nil {
		var ret bool
		return ret
	}
	return *o.ValidateSafeContentAuth
}

// GetValidateSafeContentAuthOk returns a tuple with the ValidateSafeContentAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetValidateSafeContentAuthOk() (*bool, bool) {
	if o == nil || o.ValidateSafeContentAuth == nil {
		return nil, false
	}
	return o.ValidateSafeContentAuth, true
}

// HasValidateSafeContentAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasValidateSafeContentAuth() bool {
	if o != nil && o.ValidateSafeContentAuth != nil {
		return true
	}

	return false
}

// SetValidateSafeContentAuth gets a reference to the given bool and assigns it to the ValidateSafeContentAuth field.
func (o *PVFileVersion) SetValidateSafeContentAuth(v bool) {
	o.ValidateSafeContentAuth = &v
}

// GetListAuth returns the ListAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetListAuth() bool {
	if o == nil || o.ListAuth == nil {
		var ret bool
		return ret
	}
	return *o.ListAuth
}

// GetListAuthOk returns a tuple with the ListAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetListAuthOk() (*bool, bool) {
	if o == nil || o.ListAuth == nil {
		return nil, false
	}
	return o.ListAuth, true
}

// HasListAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasListAuth() bool {
	if o != nil && o.ListAuth != nil {
		return true
	}

	return false
}

// SetListAuth gets a reference to the given bool and assigns it to the ListAuth field.
func (o *PVFileVersion) SetListAuth(v bool) {
	o.ListAuth = &v
}

// GetUsePasswordAuth returns the UsePasswordAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetUsePasswordAuth() bool {
	if o == nil || o.UsePasswordAuth == nil {
		var ret bool
		return ret
	}
	return *o.UsePasswordAuth
}

// GetUsePasswordAuthOk returns a tuple with the UsePasswordAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetUsePasswordAuthOk() (*bool, bool) {
	if o == nil || o.UsePasswordAuth == nil {
		return nil, false
	}
	return o.UsePasswordAuth, true
}

// HasUsePasswordAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasUsePasswordAuth() bool {
	if o != nil && o.UsePasswordAuth != nil {
		return true
	}

	return false
}

// SetUsePasswordAuth gets a reference to the given bool and assigns it to the UsePasswordAuth field.
func (o *PVFileVersion) SetUsePasswordAuth(v bool) {
	o.UsePasswordAuth = &v
}

// GetUpdateObjectPropertiesAuth returns the UpdateObjectPropertiesAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetUpdateObjectPropertiesAuth() bool {
	if o == nil || o.UpdateObjectPropertiesAuth == nil {
		var ret bool
		return ret
	}
	return *o.UpdateObjectPropertiesAuth
}

// GetUpdateObjectPropertiesAuthOk returns a tuple with the UpdateObjectPropertiesAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetUpdateObjectPropertiesAuthOk() (*bool, bool) {
	if o == nil || o.UpdateObjectPropertiesAuth == nil {
		return nil, false
	}
	return o.UpdateObjectPropertiesAuth, true
}

// HasUpdateObjectPropertiesAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasUpdateObjectPropertiesAuth() bool {
	if o != nil && o.UpdateObjectPropertiesAuth != nil {
		return true
	}

	return false
}

// SetUpdateObjectPropertiesAuth gets a reference to the given bool and assigns it to the UpdateObjectPropertiesAuth field.
func (o *PVFileVersion) SetUpdateObjectPropertiesAuth(v bool) {
	o.UpdateObjectPropertiesAuth = &v
}

// GetInitiateCPMChangeAuth returns the InitiateCPMChangeAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetInitiateCPMChangeAuth() bool {
	if o == nil || o.InitiateCPMChangeAuth == nil {
		var ret bool
		return ret
	}
	return *o.InitiateCPMChangeAuth
}

// GetInitiateCPMChangeAuthOk returns a tuple with the InitiateCPMChangeAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetInitiateCPMChangeAuthOk() (*bool, bool) {
	if o == nil || o.InitiateCPMChangeAuth == nil {
		return nil, false
	}
	return o.InitiateCPMChangeAuth, true
}

// HasInitiateCPMChangeAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasInitiateCPMChangeAuth() bool {
	if o != nil && o.InitiateCPMChangeAuth != nil {
		return true
	}

	return false
}

// SetInitiateCPMChangeAuth gets a reference to the given bool and assigns it to the InitiateCPMChangeAuth field.
func (o *PVFileVersion) SetInitiateCPMChangeAuth(v bool) {
	o.InitiateCPMChangeAuth = &v
}

// GetInitiateCPMChangeWithManualPasswordAuth returns the InitiateCPMChangeWithManualPasswordAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetInitiateCPMChangeWithManualPasswordAuth() bool {
	if o == nil || o.InitiateCPMChangeWithManualPasswordAuth == nil {
		var ret bool
		return ret
	}
	return *o.InitiateCPMChangeWithManualPasswordAuth
}

// GetInitiateCPMChangeWithManualPasswordAuthOk returns a tuple with the InitiateCPMChangeWithManualPasswordAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetInitiateCPMChangeWithManualPasswordAuthOk() (*bool, bool) {
	if o == nil || o.InitiateCPMChangeWithManualPasswordAuth == nil {
		return nil, false
	}
	return o.InitiateCPMChangeWithManualPasswordAuth, true
}

// HasInitiateCPMChangeWithManualPasswordAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasInitiateCPMChangeWithManualPasswordAuth() bool {
	if o != nil && o.InitiateCPMChangeWithManualPasswordAuth != nil {
		return true
	}

	return false
}

// SetInitiateCPMChangeWithManualPasswordAuth gets a reference to the given bool and assigns it to the InitiateCPMChangeWithManualPasswordAuth field.
func (o *PVFileVersion) SetInitiateCPMChangeWithManualPasswordAuth(v bool) {
	o.InitiateCPMChangeWithManualPasswordAuth = &v
}

// GetCreateFolderAuth returns the CreateFolderAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetCreateFolderAuth() bool {
	if o == nil || o.CreateFolderAuth == nil {
		var ret bool
		return ret
	}
	return *o.CreateFolderAuth
}

// GetCreateFolderAuthOk returns a tuple with the CreateFolderAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetCreateFolderAuthOk() (*bool, bool) {
	if o == nil || o.CreateFolderAuth == nil {
		return nil, false
	}
	return o.CreateFolderAuth, true
}

// HasCreateFolderAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasCreateFolderAuth() bool {
	if o != nil && o.CreateFolderAuth != nil {
		return true
	}

	return false
}

// SetCreateFolderAuth gets a reference to the given bool and assigns it to the CreateFolderAuth field.
func (o *PVFileVersion) SetCreateFolderAuth(v bool) {
	o.CreateFolderAuth = &v
}

// GetDeleteFolderAuth returns the DeleteFolderAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetDeleteFolderAuth() bool {
	if o == nil || o.DeleteFolderAuth == nil {
		var ret bool
		return ret
	}
	return *o.DeleteFolderAuth
}

// GetDeleteFolderAuthOk returns a tuple with the DeleteFolderAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetDeleteFolderAuthOk() (*bool, bool) {
	if o == nil || o.DeleteFolderAuth == nil {
		return nil, false
	}
	return o.DeleteFolderAuth, true
}

// HasDeleteFolderAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasDeleteFolderAuth() bool {
	if o != nil && o.DeleteFolderAuth != nil {
		return true
	}

	return false
}

// SetDeleteFolderAuth gets a reference to the given bool and assigns it to the DeleteFolderAuth field.
func (o *PVFileVersion) SetDeleteFolderAuth(v bool) {
	o.DeleteFolderAuth = &v
}

// GetMoveFromAuth returns the MoveFromAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetMoveFromAuth() bool {
	if o == nil || o.MoveFromAuth == nil {
		var ret bool
		return ret
	}
	return *o.MoveFromAuth
}

// GetMoveFromAuthOk returns a tuple with the MoveFromAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetMoveFromAuthOk() (*bool, bool) {
	if o == nil || o.MoveFromAuth == nil {
		return nil, false
	}
	return o.MoveFromAuth, true
}

// HasMoveFromAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasMoveFromAuth() bool {
	if o != nil && o.MoveFromAuth != nil {
		return true
	}

	return false
}

// SetMoveFromAuth gets a reference to the given bool and assigns it to the MoveFromAuth field.
func (o *PVFileVersion) SetMoveFromAuth(v bool) {
	o.MoveFromAuth = &v
}

// GetMoveIntoAuth returns the MoveIntoAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetMoveIntoAuth() bool {
	if o == nil || o.MoveIntoAuth == nil {
		var ret bool
		return ret
	}
	return *o.MoveIntoAuth
}

// GetMoveIntoAuthOk returns a tuple with the MoveIntoAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetMoveIntoAuthOk() (*bool, bool) {
	if o == nil || o.MoveIntoAuth == nil {
		return nil, false
	}
	return o.MoveIntoAuth, true
}

// HasMoveIntoAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasMoveIntoAuth() bool {
	if o != nil && o.MoveIntoAuth != nil {
		return true
	}

	return false
}

// SetMoveIntoAuth gets a reference to the given bool and assigns it to the MoveIntoAuth field.
func (o *PVFileVersion) SetMoveIntoAuth(v bool) {
	o.MoveIntoAuth = &v
}

// GetViewAuditAuth returns the ViewAuditAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetViewAuditAuth() bool {
	if o == nil || o.ViewAuditAuth == nil {
		var ret bool
		return ret
	}
	return *o.ViewAuditAuth
}

// GetViewAuditAuthOk returns a tuple with the ViewAuditAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetViewAuditAuthOk() (*bool, bool) {
	if o == nil || o.ViewAuditAuth == nil {
		return nil, false
	}
	return o.ViewAuditAuth, true
}

// HasViewAuditAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasViewAuditAuth() bool {
	if o != nil && o.ViewAuditAuth != nil {
		return true
	}

	return false
}

// SetViewAuditAuth gets a reference to the given bool and assigns it to the ViewAuditAuth field.
func (o *PVFileVersion) SetViewAuditAuth(v bool) {
	o.ViewAuditAuth = &v
}

// GetViewPermissionsAuth returns the ViewPermissionsAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetViewPermissionsAuth() bool {
	if o == nil || o.ViewPermissionsAuth == nil {
		var ret bool
		return ret
	}
	return *o.ViewPermissionsAuth
}

// GetViewPermissionsAuthOk returns a tuple with the ViewPermissionsAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetViewPermissionsAuthOk() (*bool, bool) {
	if o == nil || o.ViewPermissionsAuth == nil {
		return nil, false
	}
	return o.ViewPermissionsAuth, true
}

// HasViewPermissionsAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasViewPermissionsAuth() bool {
	if o != nil && o.ViewPermissionsAuth != nil {
		return true
	}

	return false
}

// SetViewPermissionsAuth gets a reference to the given bool and assigns it to the ViewPermissionsAuth field.
func (o *PVFileVersion) SetViewPermissionsAuth(v bool) {
	o.ViewPermissionsAuth = &v
}

// GetEventsListAuth returns the EventsListAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetEventsListAuth() bool {
	if o == nil || o.EventsListAuth == nil {
		var ret bool
		return ret
	}
	return *o.EventsListAuth
}

// GetEventsListAuthOk returns a tuple with the EventsListAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetEventsListAuthOk() (*bool, bool) {
	if o == nil || o.EventsListAuth == nil {
		return nil, false
	}
	return o.EventsListAuth, true
}

// HasEventsListAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasEventsListAuth() bool {
	if o != nil && o.EventsListAuth != nil {
		return true
	}

	return false
}

// SetEventsListAuth gets a reference to the given bool and assigns it to the EventsListAuth field.
func (o *PVFileVersion) SetEventsListAuth(v bool) {
	o.EventsListAuth = &v
}

// GetEventsAddAuth returns the EventsAddAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetEventsAddAuth() bool {
	if o == nil || o.EventsAddAuth == nil {
		var ret bool
		return ret
	}
	return *o.EventsAddAuth
}

// GetEventsAddAuthOk returns a tuple with the EventsAddAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetEventsAddAuthOk() (*bool, bool) {
	if o == nil || o.EventsAddAuth == nil {
		return nil, false
	}
	return o.EventsAddAuth, true
}

// HasEventsAddAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasEventsAddAuth() bool {
	if o != nil && o.EventsAddAuth != nil {
		return true
	}

	return false
}

// SetEventsAddAuth gets a reference to the given bool and assigns it to the EventsAddAuth field.
func (o *PVFileVersion) SetEventsAddAuth(v bool) {
	o.EventsAddAuth = &v
}

// GetCreateObjectAuth returns the CreateObjectAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetCreateObjectAuth() bool {
	if o == nil || o.CreateObjectAuth == nil {
		var ret bool
		return ret
	}
	return *o.CreateObjectAuth
}

// GetCreateObjectAuthOk returns a tuple with the CreateObjectAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetCreateObjectAuthOk() (*bool, bool) {
	if o == nil || o.CreateObjectAuth == nil {
		return nil, false
	}
	return o.CreateObjectAuth, true
}

// HasCreateObjectAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasCreateObjectAuth() bool {
	if o != nil && o.CreateObjectAuth != nil {
		return true
	}

	return false
}

// SetCreateObjectAuth gets a reference to the given bool and assigns it to the CreateObjectAuth field.
func (o *PVFileVersion) SetCreateObjectAuth(v bool) {
	o.CreateObjectAuth = &v
}

// GetUnlockObjectAuth returns the UnlockObjectAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetUnlockObjectAuth() bool {
	if o == nil || o.UnlockObjectAuth == nil {
		var ret bool
		return ret
	}
	return *o.UnlockObjectAuth
}

// GetUnlockObjectAuthOk returns a tuple with the UnlockObjectAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetUnlockObjectAuthOk() (*bool, bool) {
	if o == nil || o.UnlockObjectAuth == nil {
		return nil, false
	}
	return o.UnlockObjectAuth, true
}

// HasUnlockObjectAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasUnlockObjectAuth() bool {
	if o != nil && o.UnlockObjectAuth != nil {
		return true
	}

	return false
}

// SetUnlockObjectAuth gets a reference to the given bool and assigns it to the UnlockObjectAuth field.
func (o *PVFileVersion) SetUnlockObjectAuth(v bool) {
	o.UnlockObjectAuth = &v
}

// GetRenameObjectAuth returns the RenameObjectAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetRenameObjectAuth() bool {
	if o == nil || o.RenameObjectAuth == nil {
		var ret bool
		return ret
	}
	return *o.RenameObjectAuth
}

// GetRenameObjectAuthOk returns a tuple with the RenameObjectAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetRenameObjectAuthOk() (*bool, bool) {
	if o == nil || o.RenameObjectAuth == nil {
		return nil, false
	}
	return o.RenameObjectAuth, true
}

// HasRenameObjectAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasRenameObjectAuth() bool {
	if o != nil && o.RenameObjectAuth != nil {
		return true
	}

	return false
}

// SetRenameObjectAuth gets a reference to the given bool and assigns it to the RenameObjectAuth field.
func (o *PVFileVersion) SetRenameObjectAuth(v bool) {
	o.RenameObjectAuth = &v
}

// GetAllAuth returns the AllAuth field value if set, zero value otherwise.
func (o *PVFileVersion) GetAllAuth() bool {
	if o == nil || o.AllAuth == nil {
		var ret bool
		return ret
	}
	return *o.AllAuth
}

// GetAllAuthOk returns a tuple with the AllAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetAllAuthOk() (*bool, bool) {
	if o == nil || o.AllAuth == nil {
		return nil, false
	}
	return o.AllAuth, true
}

// HasAllAuth returns a boolean if a field has been set.
func (o *PVFileVersion) HasAllAuth() bool {
	if o != nil && o.AllAuth != nil {
		return true
	}

	return false
}

// SetAllAuth gets a reference to the given bool and assigns it to the AllAuth field.
func (o *PVFileVersion) SetAllAuth(v bool) {
	o.AllAuth = &v
}

// GetNeedConfirmStatus returns the NeedConfirmStatus field value if set, zero value otherwise.
func (o *PVFileVersion) GetNeedConfirmStatus() int64 {
	if o == nil || o.NeedConfirmStatus == nil {
		var ret int64
		return ret
	}
	return *o.NeedConfirmStatus
}

// GetNeedConfirmStatusOk returns a tuple with the NeedConfirmStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetNeedConfirmStatusOk() (*int64, bool) {
	if o == nil || o.NeedConfirmStatus == nil {
		return nil, false
	}
	return o.NeedConfirmStatus, true
}

// HasNeedConfirmStatus returns a boolean if a field has been set.
func (o *PVFileVersion) HasNeedConfirmStatus() bool {
	if o != nil && o.NeedConfirmStatus != nil {
		return true
	}

	return false
}

// SetNeedConfirmStatus gets a reference to the given int64 and assigns it to the NeedConfirmStatus field.
func (o *PVFileVersion) SetNeedConfirmStatus(v int64) {
	o.NeedConfirmStatus = &v
}

// GetIsTempVersion returns the IsTempVersion field value if set, zero value otherwise.
func (o *PVFileVersion) GetIsTempVersion() bool {
	if o == nil || o.IsTempVersion == nil {
		var ret bool
		return ret
	}
	return *o.IsTempVersion
}

// GetIsTempVersionOk returns a tuple with the IsTempVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetIsTempVersionOk() (*bool, bool) {
	if o == nil || o.IsTempVersion == nil {
		return nil, false
	}
	return o.IsTempVersion, true
}

// HasIsTempVersion returns a boolean if a field has been set.
func (o *PVFileVersion) HasIsTempVersion() bool {
	if o != nil && o.IsTempVersion != nil {
		return true
	}

	return false
}

// SetIsTempVersion gets a reference to the given bool and assigns it to the IsTempVersion field.
func (o *PVFileVersion) SetIsTempVersion(v bool) {
	o.IsTempVersion = &v
}

// GetCategoryModificationDate returns the CategoryModificationDate field value if set, zero value otherwise.
func (o *PVFileVersion) GetCategoryModificationDate() time.Time {
	if o == nil || o.CategoryModificationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CategoryModificationDate
}

// GetCategoryModificationDateOk returns a tuple with the CategoryModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PVFileVersion) GetCategoryModificationDateOk() (*time.Time, bool) {
	if o == nil || o.CategoryModificationDate == nil {
		return nil, false
	}
	return o.CategoryModificationDate, true
}

// HasCategoryModificationDate returns a boolean if a field has been set.
func (o *PVFileVersion) HasCategoryModificationDate() bool {
	if o != nil && o.CategoryModificationDate != nil {
		return true
	}

	return false
}

// SetCategoryModificationDate gets a reference to the given time.Time and assigns it to the CategoryModificationDate field.
func (o *PVFileVersion) SetCategoryModificationDate(v time.Time) {
	o.CategoryModificationDate = &v
}

func (o PVFileVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InputStream != nil {
		toSerialize["InputStream"] = o.InputStream
	}
	if o.OutputStream != nil {
		toSerialize["OutputStream"] = o.OutputStream
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Folder != nil {
		toSerialize["Folder"] = o.Folder
	}
	if o.Safe != nil {
		toSerialize["Safe"] = o.Safe
	}
	if o.InternalName != nil {
		toSerialize["InternalName"] = o.InternalName
	}
	if o.CreationDate != nil {
		toSerialize["CreationDate"] = o.CreationDate
	}
	if o.CreatedBy != nil {
		toSerialize["CreatedBy"] = o.CreatedBy
	}
	if o.Deletiondate != nil {
		toSerialize["Deletiondate"] = o.Deletiondate
	}
	if o.DeletedBy != nil {
		toSerialize["DeletedBy"] = o.DeletedBy
	}
	if o.LastUsedDate != nil {
		toSerialize["LastUsedDate"] = o.LastUsedDate
	}
	if o.LastUsedBy != nil {
		toSerialize["LastUsedBy"] = o.LastUsedBy
	}
	if o.Size != nil {
		toSerialize["Size"] = o.Size
	}
	if o.History != nil {
		toSerialize["History"] = o.History
	}
	if o.Expdt != nil {
		toSerialize["Expdt"] = o.Expdt
	}
	if o.FileAccessMarkFlags != nil {
		toSerialize["FileAccessMarkFlags"] = o.FileAccessMarkFlags
	}
	if o.OwnerFlags != nil {
		toSerialize["OwnerFlags"] = o.OwnerFlags
	}
	if o.LockDate != nil {
		toSerialize["LockDate"] = o.LockDate
	}
	if o.LockedBy != nil {
		toSerialize["LockedBy"] = o.LockedBy
	}
	if o.ObjectType != nil {
		toSerialize["ObjectType"] = o.ObjectType
	}
	if o.FileNumber != nil {
		toSerialize["FileNumber"] = o.FileNumber
	}
	if o.IsDraft != nil {
		toSerialize["IsDraft"] = o.IsDraft
	}
	if o.IsRetrieveLock != nil {
		toSerialize["IsRetrieveLock"] = o.IsRetrieveLock
	}
	if o.FileCreationDate != nil {
		toSerialize["FileCreationDate"] = o.FileCreationDate
	}
	if o.FileCreatedBy != nil {
		toSerialize["FileCreatedBy"] = o.FileCreatedBy
	}
	if o.AgentLockedBy != nil {
		toSerialize["AgentLockedBy"] = o.AgentLockedBy
	}
	if o.Options != nil {
		toSerialize["Options"] = o.Options
	}
	if o.ModificationDate != nil {
		toSerialize["ModificationDate"] = o.ModificationDate
	}
	if o.RealModificationDate != nil {
		toSerialize["RealModificationDate"] = o.RealModificationDate
	}
	if o.RealModifiedBy != nil {
		toSerialize["RealModifiedBy"] = o.RealModifiedBy
	}
	if o.LastSuccessfulBiosScan != nil {
		toSerialize["LastSuccessfulBiosScan"] = o.LastSuccessfulBiosScan
	}
	if o.LastFailureBiosScan != nil {
		toSerialize["LastFailureBiosScan"] = o.LastFailureBiosScan
	}
	if o.LastFailureBiosScanReason != nil {
		toSerialize["LastFailureBiosScanReason"] = o.LastFailureBiosScanReason
	}
	if o.ModifiedBy != nil {
		toSerialize["ModifiedBy"] = o.ModifiedBy
	}
	if o.LastHumanUsedBy != nil {
		toSerialize["LastHumanUsedBy"] = o.LastHumanUsedBy
	}
	if o.LastHumanUsedDate != nil {
		toSerialize["LastHumanUsedDate"] = o.LastHumanUsedDate
	}
	if o.LastHumanRetrievedBy != nil {
		toSerialize["LastHumanRetrievedBy"] = o.LastHumanRetrievedBy
	}
	if o.LastHumanRetrievedDate != nil {
		toSerialize["LastHumanRetrievedDate"] = o.LastHumanRetrievedDate
	}
	if o.SafeID != nil {
		toSerialize["SafeID"] = o.SafeID
	}
	if o.AccessLevel != nil {
		toSerialize["AccessLevel"] = o.AccessLevel
	}
	if o.MonitorAuth != nil {
		toSerialize["MonitorAuth"] = o.MonitorAuth
	}
	if o.ManagerAuth != nil {
		toSerialize["ManagerAuth"] = o.ManagerAuth
	}
	if o.GetAuth != nil {
		toSerialize["GetAuth"] = o.GetAuth
	}
	if o.PutAuth != nil {
		toSerialize["PutAuth"] = o.PutAuth
	}
	if o.DeleteAuth != nil {
		toSerialize["DeleteAuth"] = o.DeleteAuth
	}
	if o.SupervisorAuth != nil {
		toSerialize["SupervisorAuth"] = o.SupervisorAuth
	}
	if o.BackupAuth != nil {
		toSerialize["BackupAuth"] = o.BackupAuth
	}
	if o.OwnersManagerAuth != nil {
		toSerialize["OwnersManagerAuth"] = o.OwnersManagerAuth
	}
	if o.NoConfirmRequiredAuth != nil {
		toSerialize["NoConfirmRequiredAuth"] = o.NoConfirmRequiredAuth
	}
	if o.ValidateSafeContentAuth != nil {
		toSerialize["ValidateSafeContentAuth"] = o.ValidateSafeContentAuth
	}
	if o.ListAuth != nil {
		toSerialize["ListAuth"] = o.ListAuth
	}
	if o.UsePasswordAuth != nil {
		toSerialize["UsePasswordAuth"] = o.UsePasswordAuth
	}
	if o.UpdateObjectPropertiesAuth != nil {
		toSerialize["UpdateObjectPropertiesAuth"] = o.UpdateObjectPropertiesAuth
	}
	if o.InitiateCPMChangeAuth != nil {
		toSerialize["InitiateCPMChangeAuth"] = o.InitiateCPMChangeAuth
	}
	if o.InitiateCPMChangeWithManualPasswordAuth != nil {
		toSerialize["InitiateCPMChangeWithManualPasswordAuth"] = o.InitiateCPMChangeWithManualPasswordAuth
	}
	if o.CreateFolderAuth != nil {
		toSerialize["CreateFolderAuth"] = o.CreateFolderAuth
	}
	if o.DeleteFolderAuth != nil {
		toSerialize["DeleteFolderAuth"] = o.DeleteFolderAuth
	}
	if o.MoveFromAuth != nil {
		toSerialize["MoveFromAuth"] = o.MoveFromAuth
	}
	if o.MoveIntoAuth != nil {
		toSerialize["MoveIntoAuth"] = o.MoveIntoAuth
	}
	if o.ViewAuditAuth != nil {
		toSerialize["ViewAuditAuth"] = o.ViewAuditAuth
	}
	if o.ViewPermissionsAuth != nil {
		toSerialize["ViewPermissionsAuth"] = o.ViewPermissionsAuth
	}
	if o.EventsListAuth != nil {
		toSerialize["EventsListAuth"] = o.EventsListAuth
	}
	if o.EventsAddAuth != nil {
		toSerialize["EventsAddAuth"] = o.EventsAddAuth
	}
	if o.CreateObjectAuth != nil {
		toSerialize["CreateObjectAuth"] = o.CreateObjectAuth
	}
	if o.UnlockObjectAuth != nil {
		toSerialize["UnlockObjectAuth"] = o.UnlockObjectAuth
	}
	if o.RenameObjectAuth != nil {
		toSerialize["RenameObjectAuth"] = o.RenameObjectAuth
	}
	if o.AllAuth != nil {
		toSerialize["AllAuth"] = o.AllAuth
	}
	if o.NeedConfirmStatus != nil {
		toSerialize["NeedConfirmStatus"] = o.NeedConfirmStatus
	}
	if o.IsTempVersion != nil {
		toSerialize["IsTempVersion"] = o.IsTempVersion
	}
	if o.CategoryModificationDate != nil {
		toSerialize["CategoryModificationDate"] = o.CategoryModificationDate
	}
	return json.Marshal(toSerialize)
}

type NullablePVFileVersion struct {
	value *PVFileVersion
	isSet bool
}

func (v NullablePVFileVersion) Get() *PVFileVersion {
	return v.value
}

func (v *NullablePVFileVersion) Set(val *PVFileVersion) {
	v.value = val
	v.isSet = true
}

func (v NullablePVFileVersion) IsSet() bool {
	return v.isSet
}

func (v *NullablePVFileVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePVFileVersion(val *PVFileVersion) *NullablePVFileVersion {
	return &NullablePVFileVersion{value: val, isSet: true}
}

func (v NullablePVFileVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePVFileVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
